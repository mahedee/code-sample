@model TMS.Models.Training

@* This partial view defines form fields that will appear when creating and editing entities *@

<div class="editor-label">
    @Html.LabelFor(model => model.Title)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Title)
    @Html.ValidationMessageFor(model => model.Title)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Venue)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Venue)
    @Html.ValidationMessageFor(model => model.Venue)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Description)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Description)
    @Html.ValidationMessageFor(model => model.Description)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.StartDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.StartDate)
    @Html.ValidationMessageFor(model => model.StartDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.EndDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.EndDate)
    @Html.ValidationMessageFor(model => model.EndDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.CreateDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.CreateDate)
    @Html.ValidationMessageFor(model => model.CreateDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.ModificationDate)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.ModificationDate)
    @Html.ValidationMessageFor(model => model.ModificationDate)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.IsActive)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.IsActive)
    @Html.ValidationMessageFor(model => model.IsActive)
</div>

<div class="editor-label">
    Trainer
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.TrainerId, ((IEnumerable<TMS.Models.Trainer>)ViewBag.PossibleTrainers).Select(option => new SelectListItem {
        Text = (option == null ? "None" : option.Name), 
        Value = option.Id.ToString(),
        Selected = (Model != null) && (option.Id == Model.TrainerId)
    }), "Choose...")
    @Html.ValidationMessageFor(model => model.TrainerId)
</div>
